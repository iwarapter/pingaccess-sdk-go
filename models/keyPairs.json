{
  "apiVersion": "5.2.1.3",
  "swaggerVersion": "1.2",
  "basePath": "https://localhost:9000/pa-admin-api/v3",
  "resourcePath": "/keyPairs",
  "apis": [
    {
      "path": "/keyPairs",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all Key Pairs",
          "notes": "",
          "type": "KeyPairsView",
          "nickname": "getKeyPairsCommand",
          "parameters": [
            {
              "name": "page",
              "description": "Page number to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "numberPerPage",
              "description": "Number of Key Pairs per page",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "filter",
              "description": "Search for Key Pairs with alias matching filter text",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "alias",
              "description": "Get a Key Pair by alias",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "sortKey",
              "description": "A comma separated list of Key Pair attributes (keys) to be used to sort the results",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "order",
              "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/generate",
      "operations": [
        {
          "method": "POST",
          "summary": "Generate a Key Pair",
          "notes": "",
          "type": "KeyPairView",
          "nickname": "generateKeyPair",
          "parameters": [
            {
              "name": "NewKeyPairConfig",
              "description": "Configuration for the new Key Pair",
              "required": true,
              "allowMultiple": false,
              "type": "NewKeyPairConfig",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/import",
      "operations": [
        {
          "method": "POST",
          "summary": "Import a Key Pair from a PKCS12 file",
          "notes": "",
          "type": "KeyPairView",
          "nickname": "importKeyPairCommand",
          "parameters": [
            {
              "name": "PKCS12File",
              "description": "Key Pair to import",
              "required": true,
              "allowMultiple": false,
              "type": "PKCS12FileImportDocView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/keyAlgorithms",
      "operations": [
        {
          "method": "GET",
          "summary": "Get the key algorithms supported by Key Pair generation",
          "notes": "",
          "type": "KeyAlgorithmsView",
          "nickname": "keyAlgorithms",
          "parameters": []
        }
      ]
    },
    {
      "path": "/keyPairs/subjectAlternativeTypes",
      "operations": [
        {
          "method": "GET",
          "summary": "Get the valid General Names for creating Subject Alternative Names",
          "notes": "",
          "type": "SanTypes",
          "nickname": "getKeypairsCreatableGeneralNamesCommand",
          "parameters": []
        }
      ]
    },
    {
      "path": "/keyPairs/{id}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete a Key Pair",
          "notes": "",
          "type": "void",
          "nickname": "deleteKeyPairCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the Key Pair to delete",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Get a Key Pair",
          "notes": "",
          "type": "KeyPairView",
          "nickname": "getKeyPairCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Key Pair to get",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "PATCH",
          "summary": "Update the chainCertificates of a Key Pair",
          "notes": "",
          "type": "ChainCertificates",
          "nickname": "patchKeyPairCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Key Pair to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "addChainCertificates",
              "description": "A list of base64-encoded Chain Certificates",
              "required": true,
              "allowMultiple": false,
              "type": "ChainCertificates",
              "paramType": "body"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update a Key Pair",
          "notes": "",
          "type": "KeyPairView",
          "nickname": "updateKeyPairCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Key Pair to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "PKCS12File",
              "description": "PKCS12 file containing the Key Pair",
              "required": true,
              "allowMultiple": false,
              "type": "PKCS12FileImportDocView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/{id}/certificate",
      "operations": [
        {
          "method": "GET",
          "summary": "Export only the Certificate from a Key Pair",
          "notes": "",
          "type": "void",
          "nickname": "exportKeyPairCert",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the Key Pair Certificate to export",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/{id}/csr",
      "operations": [
        {
          "method": "GET",
          "summary": "Generate a Certificate Signing Request for a Key Pair",
          "notes": "Generates a Certificate Signing Request for the Key Pair. The content type of a valid response is application/pkcs10.",
          "type": "void",
          "nickname": "generateCSR",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the Key Pair to sign",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Import a Certificate Signing Request response",
          "notes": "",
          "type": "KeyPairView",
          "nickname": "importCSRResponseCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the Key Pair to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "CSRResponse",
              "description": "The Certificate Signing Request (CSR) response",
              "required": true,
              "allowMultiple": false,
              "type": "CSRResponseImportDocView",
              "paramType": "body"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Import a Certificate Signing Request response",
          "notes": "",
          "type": "KeyPairView",
          "nickname": "importCSRResponseCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the Key Pair to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "CSRResponse",
              "description": "The Certificate Signing Request (CSR) response",
              "required": true,
              "allowMultiple": false,
              "type": "CSRResponseImportDocView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/{id}/pkcs12",
      "operations": [
        {
          "method": "POST",
          "summary": "Export a Key Pair in the PKCS12 file format",
          "notes": "",
          "type": "void",
          "nickname": "exportKeyPair",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the Key Pair to export",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "ExportParameters",
              "description": "Parameters for the export",
              "required": true,
              "allowMultiple": false,
              "type": "ExportParameters",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/keyPairs/{keyPairId}/chainCertificates/{chainCertificateId}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete a Chain Certificate",
          "notes": "",
          "type": "void",
          "nickname": "deleteChainCertificateCommand",
          "parameters": [
            {
              "name": "keyPairId",
              "description": "ID of Key Pair",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "chainCertificateId",
              "description": "ID of the Chain Certificate to delete",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "NewKeyPairConfig": {
      "id": "NewKeyPairConfig",
      "required": [
        "alias",
        "city",
        "commonName",
        "country",
        "keyAlgorithm",
        "keySize",
        "organization",
        "organizationUnit",
        "state",
        "validDays"
      ],
      "properties": {
        "alias": {
          "type": "string",
          "description": "A unique alias name to identify the key pair. Special characters and spaces are allowed."
        },
        "city": {
          "type": "string",
          "description": "The city or other primary location (L) where the company operates."
        },
        "commonName": {
          "type": "string",
          "description": "The common name (CN) identifying the certificate."
        },
        "country": {
          "type": "string",
          "description": "The country (C) where the company is based, using two capital letters."
        },
        "keyAlgorithm": {
          "type": "string",
          "description": "The key algorithm to use to generate a key."
        },
        "keySize": {
          "type": "integer",
          "format": "int32",
          "description": "The number of bits used in the key.  Choices depend on selected key algorithm."
        },
        "organization": {
          "type": "string",
          "description": "The organization (O) or company name creating the certificate."
        },
        "organizationUnit": {
          "type": "string",
          "description": "The specific unit within the organization (OU)."
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "The Signature Algorithm to use for the key."
        },
        "state": {
          "type": "string",
          "description": "The state (ST) or other political unit encompassing the location."
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "Any additional DNS names or IP addresses that are valid for this certificate.",
          "items": {
            "$ref": "GeneralName"
          }
        },
        "validDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days the certificate is valid."
        }
      }
    },
    "KeyPairsView": {
      "id": "KeyPairsView",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of key pairs.",
          "items": {
            "$ref": "KeyPairView"
          }
        }
      }
    },
    "CSRResponseImportDocView": {
      "id": "CSRResponseImportDocView",
      "required": [
        "fileData",
        "trustedCertGroupId"
      ],
      "properties": {
        "fileData": {
          "type": "string",
          "description": "The CSR response data."
        },
        "trustedCertGroupId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the trusted certificate group associated with the CSR response."
        }
      }
    },
    "KeyAlgorithm": {
      "id": "KeyAlgorithm",
      "required": [
        "defaultKeySize",
        "defaultSignatureAlgorithm",
        "keySizes",
        "name",
        "signatureAlgorithms"
      ],
      "properties": {
        "defaultKeySize": {
          "type": "integer",
          "format": "int32",
          "description": "The default key size value to use."
        },
        "defaultSignatureAlgorithm": {
          "type": "string",
          "description": "The default signature algorithm to use."
        },
        "keySizes": {
          "type": "array",
          "description": "The list of available key sizes.",
          "items": {
            "type": "int"
          }
        },
        "name": {
          "type": "string",
          "description": "The algorithm name."
        },
        "signatureAlgorithms": {
          "type": "array",
          "description": "The list of available signature algorithms.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KeyPairView": {
      "id": "KeyPairView",
      "required": [
        "alias",
        "csrPending",
        "expires",
        "issuerDn",
        "md5sum",
        "serialNumber",
        "sha1sum",
        "signatureAlgorithm",
        "status",
        "subjectDn",
        "validFrom"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The Id for the key pair."
        },
        "alias": {
          "type": "string",
          "description": "(sortable) The Alias for the key pair."
        },
        "chainCertificates": {
          "type": "array",
          "description": "The complete list of certificates in the key pair certificate chain.",
          "items": {
            "$ref": "ChainCertificateView"
          }
        },
        "csrPending": {
          "type": "boolean",
          "description": "(sortable) True if a CSR is generated for this key pair."
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "(sortable) The date at which the key pair expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT."
        },
        "issuerDn": {
          "type": "string",
          "description": "(sortable) The Issuer DN for the key pair."
        },
        "md5sum": {
          "type": "string",
          "description": "The MD5 checksum of the key pair."
        },
        "serialNumber": {
          "type": "string",
          "description": "(sortable) The Serial Number for the key pair."
        },
        "sha1sum": {
          "type": "string",
          "description": "The SHA1 checksum of the key pair."
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "(sortable) The Signature Algorithm used by the key pair."
        },
        "status": {
          "$ref": "CertStatus",
          "description": "A high-level status for the key pair.",
          "enum": [
            "Valid",
            "Expired",
            "Not yet valid",
            "Revoked",
            "Undetermined revocation status",
            "No path to trust anchor",
            "Invalid"
          ]
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "A collection of subject alternative names for the certificate.",
          "items": {
            "$ref": "GeneralName"
          }
        },
        "subjectCn": {
          "type": "string",
          "description": "(sortable) The common name (CN) identifying the certificate."
        },
        "subjectDn": {
          "type": "string",
          "description": "(sortable) The Subject DN for the key pair."
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "(sortable) The date at which the key pair is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT."
        }
      }
    },
    "PKCS12FileImportDocView": {
      "id": "PKCS12FileImportDocView",
      "required": [
        "alias",
        "chainCertificates",
        "fileData",
        "password"
      ],
      "properties": {
        "alias": {
          "type": "string",
          "description": "A unique alias name to identify the key pair. Special characters and spaces are allowed."
        },
        "chainCertificates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileData": {
          "type": "string",
          "description": "The PKCS#12 file data."
        },
        "password": {
          "type": "string",
          "description": "The Password used to protect the PKCS#12 file."
        }
      }
    },
    "KeyAlgorithmsView": {
      "id": "KeyAlgorithmsView",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of key algorithms.",
          "items": {
            "$ref": "KeyAlgorithm"
          }
        }
      }
    },
    "ChainCertificateView": {
      "id": "ChainCertificateView",
      "required": [
        "alias",
        "expires",
        "issuerDn",
        "md5sum",
        "serialNumber",
        "sha1sum",
        "signatureAlgorithm",
        "status",
        "subjectDn",
        "validFrom"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The Id for the chain certificate."
        },
        "alias": {
          "type": "string",
          "description": "(sortable) The Alias for the chain certificate."
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "(sortable) The date at which the chain certificate expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT."
        },
        "issuerDn": {
          "type": "string",
          "description": "(sortable) The Issuer DN for the chain certificate."
        },
        "md5sum": {
          "type": "string",
          "description": "The MD5 checksum of the chain certificate."
        },
        "serialNumber": {
          "type": "string",
          "description": "(sortable) The Serial Number for the chain certificate."
        },
        "sha1sum": {
          "type": "string",
          "description": "The SHA1 checksum of the chain certificate."
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "(sortable) The Signature Algorithm used by the chain certificate."
        },
        "status": {
          "$ref": "CertStatus",
          "description": "A high-level status for the chain certificate.",
          "enum": [
            "Valid",
            "Expired",
            "Not yet valid",
            "Revoked",
            "Undetermined revocation status",
            "No path to trust anchor",
            "Invalid"
          ]
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "A collection of subject alternative names for the certificate.",
          "items": {
            "$ref": "GeneralName"
          }
        },
        "subjectCn": {
          "type": "string",
          "description": "(sortable) The common name (CN) identifying the certificate."
        },
        "subjectDn": {
          "type": "string",
          "description": "(sortable) The Subject DN for the chain certificate."
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "(sortable) The date at which the chain certificate is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT."
        }
      }
    },
    "GeneralName": {
      "id": "GeneralName",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "$ref": "GeneralNameEnum",
          "description": "The type of the subject alternative name.",
          "enum": [
            "otherName",
            "rfc822Name",
            "dNSName",
            "x400Address",
            "directoryName",
            "ediPartyName",
            "uniformResourceIdentifier",
            "iPAddress",
            "registeredID"
          ]
        },
        "value": {
          "type": "string",
          "description": "The value of the subject alternative name."
        }
      }
    },
    "SanTypes": {
      "id": "SanTypes",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "$ref": "List[SanType]",
          "description": "The actual list of available general names."
        }
      }
    },
    "ChainCertificates": {
      "id": "ChainCertificates",
      "required": [
        "addChainCertificates"
      ],
      "properties": {
        "addChainCertificates": {
          "type": "array",
          "description": "A list of base64-encode certificates to add to the key pair certificate chain.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExportParameters": {
      "id": "ExportParameters",
      "required": [
        "id",
        "password"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The Id of the exported key pair"
        },
        "password": {
          "type": "string",
          "description": "The password used to protect the exported key pair"
        }
      }
    }
  }
}
