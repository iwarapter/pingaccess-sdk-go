{
  "apiVersion": "6.0.0.3",
  "swaggerVersion": "1.2",
  "basePath": "https://localhost:9000/pa-admin-api/v3",
  "resourcePath": "/oidc",
  "apis": [
    {
      "path": "/oidc/provider",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Resets the OpenID Connect Provider configuration to default values",
          "notes": "",
          "type": "void",
          "nickname": "deleteOIDCProviderCommand",
          "parameters": []
        },
        {
          "method": "GET",
          "summary": "Get the OpenID Connect Provider configuration",
          "notes": "",
          "type": "OIDCProviderView",
          "nickname": "getOIDCProviderCommand",
          "parameters": []
        },
        {
          "method": "PUT",
          "summary": "Update the OpenID Connect Provider configuration",
          "notes": "",
          "type": "OIDCProviderView",
          "nickname": "updateOIDCProviderCommand",
          "parameters": [
            {
              "name": "OpenIDConnectProvider",
              "description": "OpenID Connect Provider configuration",
              "required": true,
              "allowMultiple": false,
              "type": "OIDCProviderView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/oidc/provider/descriptors",
      "operations": [
        {
          "method": "GET",
          "summary": "Get descriptors for all OIDC Provider plugins",
          "notes": "",
          "type": "DescriptorsView",
          "nickname": "getOIDCProviderPluginDescriptorsCommand",
          "parameters": []
        }
      ]
    },
    {
      "path": "/oidc/provider/descriptors/{pluginType}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get a descriptor for a OIDC Provider plugin",
          "notes": "",
          "type": "DescriptorView",
          "nickname": "getOIDCProviderPluginDescriptorCommand",
          "parameters": [
            {
              "name": "pluginType",
              "description": "OIDC Provider plugin descriptor to retrieve",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/oidc/provider/metadata",
      "operations": [
        {
          "method": "GET",
          "summary": "Get the OpenID Connect Provider's metadata",
          "notes": "",
          "type": "OIDCProviderMetadata",
          "nickname": "getOIDCProviderMetadataCommand",
          "parameters": []
        }
      ]
    }
  ],
  "models": {
    "QueryParameterView": {
      "id": "QueryParameterView",
      "description": "A name-value pair of custom query parameters.",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the query parameter."
        },
        "value": {
          "type": "string",
          "description": "The value of the query parameter."
        }
      }
    },
    "ConfigurationParentField": {
      "id": "ConfigurationParentField",
      "description": "Configuration of the parent field.",
      "required": [
        "dependentFieldOptions",
        "fieldName"
      ],
      "properties": {
        "dependentFieldOptions": {
          "type": "array",
          "description": "The dependent field options attributes.",
          "items": {
            "$ref": "ConfigurationDependentFieldOption"
          }
        },
        "fieldName": {
          "type": "string",
          "description": "The configuration parent field name."
        }
      }
    },
    "OIDCProviderMetadata": {
      "id": "OIDCProviderMetadata",
      "description": "The OpenID Connect provider's metadata.",
      "required": [
        "authorization_endpoint",
        "backchannel_authentication_endpoint",
        "claim_types_supported",
        "claims_parameter_supported",
        "claims_supported",
        "code_challenge_methods_supported",
        "end_session_endpoint",
        "grant_types_supported",
        "id_token_signing_alg_values_supported",
        "introspection_endpoint",
        "issuer",
        "jwks_uri",
        "ping_end_session_endpoint",
        "ping_revoked_sris_endpoint",
        "request_object_signing_alg_values_supported",
        "request_parameter_supported",
        "request_uri_parameter_supported",
        "response_modes_supported",
        "response_types_supported",
        "revocation_endpoint",
        "scopes_supported",
        "subject_types_supported",
        "token_endpoint",
        "token_endpoint_auth_methods_supported",
        "userinfo_endpoint",
        "userinfo_signing_alg_values_supported"
      ],
      "properties": {
        "authorization_endpoint": {
          "type": "string",
          "description": "URL of the OpenID Connect provider's authorization endpoint."
        },
        "backchannel_authentication_endpoint": {
          "type": "string"
        },
        "claim_types_supported": {
          "type": "array",
          "description": "JSON array containing a list of the claim types that the OpenID Connect provider supports.",
          "items": {
            "type": "string"
          }
        },
        "claims_parameter_supported": {
          "type": "boolean",
          "description": "boolean value specifying whether the OpenID Connect provider supports use of the claims parameter, with true indicating support."
        },
        "claims_supported": {
          "type": "array",
          "description": "JSON array containing a list of the claim names of the claims that the OpenID Connect provider MAY be able to supply values for.",
          "items": {
            "type": "string"
          }
        },
        "code_challenge_methods_supported": {
          "type": "array",
          "description": "Proof Key for Code Exchange (PKCE) code challenge methods supported by this OpenID Connect provider.",
          "items": {
            "type": "string"
          }
        },
        "end_session_endpoint": {
          "type": "string",
          "description": "URL at the OpenID Connect provider to which a relying party can perform a redirect to request that the end-user be logged out at the OpenID Connect provider."
        },
        "grant_types_supported": {
          "type": "array",
          "description": "JSON array containing a list of the OAuth 2.0 grant type values that this OpenID Connect provider supports.",
          "items": {
            "type": "string"
          }
        },
        "id_token_signing_alg_values_supported": {
          "type": "array",
          "description": "JSON array containing a list of the JWS signing algorithms supported by the OpenID Connect provider for the id token to encode the claims in a JWT.",
          "items": {
            "type": "string"
          }
        },
        "introspection_endpoint": {
          "type": "string",
          "description": "URL of the OpenID Connect provider's OAuth 2.0 introspection endpoint."
        },
        "issuer": {
          "type": "string",
          "description": "OpenID Connect provider's issuer identifier URL."
        },
        "jwks_uri": {
          "type": "string",
          "description": "URL of the OpenID Connect provider's JWK Set document."
        },
        "ping_end_session_endpoint": {
          "type": "string",
          "description": "PingFederate logout endpoint. (Not applicable if PingFederate is not the OpenID Connect provider)"
        },
        "ping_revoked_sris_endpoint": {
          "type": "string",
          "description": "PingFederate session revocation endpoint. (Not applicable if PingFederate is not the OpenID Connect provider)"
        },
        "request_object_signing_alg_values_supported": {
          "type": "array",
          "description": "JSON array containing a list of the JWS signing algorithms supported by the OpenID Connect provider for request objects.",
          "items": {
            "type": "string"
          }
        },
        "request_parameter_supported": {
          "type": "boolean",
          "description": "boolean value specifying whether the OpenID Connect provider supports use of the request parameter, with true indicating support."
        },
        "request_uri_parameter_supported": {
          "type": "boolean",
          "description": "boolean value specifying whether the OpenID Connect provider supports use of the request_uri parameter, with true indicating support."
        },
        "response_modes_supported": {
          "type": "array",
          "description": "JSON array containing a list of the OAuth 2.0 \"response_mode\" values that this OpenID Connect provider supports.",
          "items": {
            "type": "string"
          }
        },
        "response_types_supported": {
          "type": "array",
          "description": "JSON array containing a list of the OAuth 2.0 \"response_type\" values that this OpenID Connect provider supports.",
          "items": {
            "type": "string"
          }
        },
        "revocation_endpoint": {
          "type": "string",
          "description": "URL of the OpenID Connect provider's OAuth 2.0 revocation endpoint."
        },
        "scopes_supported": {
          "type": "array",
          "description": "JSON array containing a list of the OAuth 2.0 \"scope\" values that this OpenID Connect provider supports.",
          "items": {
            "type": "string"
          }
        },
        "subject_types_supported": {
          "type": "array",
          "description": "JSON array containing a list of the Subject Identifier types that this OpenID Connect provider supports.",
          "items": {
            "type": "string"
          }
        },
        "token_endpoint": {
          "type": "string",
          "description": "URL of the OpenID Connect provider's token endpoint."
        },
        "token_endpoint_auth_methods_supported": {
          "type": "array",
          "description": "JSON array containing a list of client authentication methods supported by this token endpoint.",
          "items": {
            "type": "string"
          }
        },
        "userinfo_endpoint": {
          "type": "string",
          "description": "URL of the OpenID Connect provider's userInfo endpoint."
        },
        "userinfo_signing_alg_values_supported": {
          "type": "array",
          "description": "JSON array containing a list of the JWS signing algorithms supported by the userInfo endpoint to encode the claims in a JWT.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConfigurationField": {
      "id": "ConfigurationField",
      "description": "Details for configuration in the administrator console.",
      "required": [
        "advanced",
        "buttonGroup",
        "default",
        "deselectable",
        "fields",
        "help",
        "label",
        "name",
        "options",
        "parentField",
        "required",
        "type"
      ],
      "properties": {
        "advanced": {
          "type": "boolean",
          "description": "Indicates that the configuration field is an advanced field or not."
        },
        "buttonGroup": {
          "type": "string",
          "description": "The name of group radio buttons that cooperate in a single selection."
        },
        "default": {
          "type": "string",
          "description": "The default value of the configuration field."
        },
        "deselectable": {
          "type": "boolean",
          "description": "Indicates that a radio button is able to be deselected."
        },
        "fields": {
          "type": "array",
          "description": "The list of configuration fields that the current configuration field is the parent of.",
          "items": {
            "$ref": "ConfigurationField"
          }
        },
        "help": {
          "$ref": "Help",
          "description": "The help attributes of the configuration field."
        },
        "label": {
          "type": "string",
          "description": "The label of the configuration field."
        },
        "name": {
          "type": "string",
          "description": "The name of the configuration field."
        },
        "options": {
          "$ref": "java.util.Collection<com.pingidentity.pa.sdk.ui.ConfigurationOption>",
          "description": "The available options for the select based configuration fields."
        },
        "parentField": {
          "$ref": "ConfigurationParentField",
          "description": "The parent field attributes."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates that the configuration field value is required or not."
        },
        "type": {
          "$ref": "ConfigurationType",
          "description": "The type of the configuration field.",
          "enum": [
            "TEXT",
            "TEXTAREA",
            "TIME",
            "SELECT",
            "GROOVY",
            "CONCEALED",
            "LIST",
            "TABLE",
            "CHECKBOX",
            "AUTOCOMPLETEOPEN",
            "AUTOCOMPLETECLOSED",
            "COMPOSITE",
            "RADIO_BUTTON"
          ]
        }
      }
    },
    "OIDCProviderPluginView": {
      "id": "OIDCProviderPluginView",
      "description": "An OpenID Connect provider plugin.",
      "required": [
        "className",
        "configuration"
      ],
      "properties": {
        "className": {
          "type": "string",
          "description": "The class name of the OpenID Connect provider plugin."
        },
        "configuration": {
          "$ref": "Map[string,java.lang.Object]",
          "description": "The OpenID Connect provider plugin's configuration data."
        }
      }
    },
    "DescriptorsView": {
      "id": "DescriptorsView",
      "description": "A list of descriptors.",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of descriptors.",
          "items": {
            "$ref": "DescriptorView"
          }
        }
      }
    },
    "ConfigurationOption": {
      "id": "ConfigurationOption",
      "description": "The configuration option attributes.",
      "required": [
        "category",
        "label",
        "value"
      ],
      "properties": {
        "category": {
          "$ref": "java.util.Optional<java.lang.String>",
          "description": "The configuration option category."
        },
        "label": {
          "type": "string",
          "description": "The configuration option label."
        },
        "value": {
          "type": "string",
          "description": "The configuration option value."
        }
      }
    },
    "ConfigurationDependentFieldOption": {
      "id": "ConfigurationDependentFieldOption",
      "description": "Configuration of the dependent field option.",
      "required": [
        "options",
        "value"
      ],
      "properties": {
        "options": {
          "type": "array",
          "description": "The dependent field options.",
          "items": {
            "$ref": "ConfigurationOption"
          }
        },
        "value": {
          "type": "string",
          "description": "The dependent field option value."
        }
      }
    },
    "Help": {
      "id": "Help",
      "description": "Configuration of the help context of a configuration field.",
      "required": [
        "content",
        "title",
        "url"
      ],
      "properties": {
        "content": {
          "type": "string",
          "description": "The help content of the configuration field."
        },
        "title": {
          "type": "string",
          "description": "The help title of the configuration field."
        },
        "url": {
          "type": "string",
          "description": "The help URL for the configuration field."
        }
      }
    },
    "DescriptorView": {
      "id": "DescriptorView",
      "description": "A descriptor.",
      "required": [
        "className",
        "configurationFields",
        "label",
        "type"
      ],
      "properties": {
        "className": {
          "type": "string",
          "description": "The name of the implementation class."
        },
        "configurationFields": {
          "type": "array",
          "description": "The list of configuration fields for the class.",
          "items": {
            "$ref": "ConfigurationField"
          }
        },
        "label": {
          "type": "string",
          "description": "The label for the entity."
        },
        "type": {
          "type": "string",
          "description": "The type for the entity."
        }
      }
    },
    "OIDCProviderView": {
      "id": "OIDCProviderView",
      "description": "The third-party OpenID Connect provider configuration.",
      "required": [
        "issuer"
      ],
      "properties": {
        "auditLevel": {
          "$ref": "AuditLevel",
          "description": "Enable to record requests to third-party OpenID Connect provider to the audit store.",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description of the third-party OpenID Connect provider."
        },
        "issuer": {
          "type": "string",
          "description": "The issuer of the third-party OpenID Connect provider."
        },
        "plugin": {
          "$ref": "OIDCProviderPluginView",
          "description": "The OpenID Connect provider plugin."
        },
        "queryParameters": {
          "type": "array",
          "description": "The query parameters used by the authentication request to third-party OpenID Connect provider.",
          "items": {
            "$ref": "QueryParameterView"
          }
        },
        "requestSupportedScopesOnly": {
          "type": "boolean",
          "description": "Specifies whether the scopes in an access request should be limited to those advertised in the OIDC metadata."
        },
        "trustedCertificateGroupId": {
          "type": "integer",
          "format": "int32",
          "description": "The group of certificates to use when authenticating to third-party OpenID Connect provider."
        },
        "useProxy": {
          "type": "boolean",
          "description": "True if a proxy should be used for HTTP or HTTPS requests."
        },
        "useSlo": {
          "type": "boolean",
          "description": "True if single log off (SLO) should be used."
        }
      }
    }
  }
}
