{
  "apiVersion": "5.2.2.0",
  "swaggerVersion": "1.2",
  "basePath": "https://localhost:9000/pa-admin-api/v3",
  "resourcePath": "/thirdPartyServices",
  "apis": [
    {
      "path": "/thirdPartyServices",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all Third-Party Services",
          "notes": "",
          "type": "ThirdPartyServicesView",
          "nickname": "getThirdPartyServicesCommand",
          "parameters": [
            {
              "name": "page",
              "description": "Page number to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "numberPerPage",
              "description": "Number of Third-Party Services per page",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "filter",
              "description": "Search for Third-Party Services with name matching filter text",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "Get a Third-Party Service by name (case-sensitive)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "sortKey",
              "description": "A comma separated list of Third-Party Service attributes (keys) to be used to sort the results",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "order",
              "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Create a Third-Party Service",
          "notes": "",
          "type": "ThirdPartyServiceView",
          "nickname": "addThirdPartyServiceCommand",
          "parameters": [
            {
              "name": "ThirdPartyService",
              "description": "Third-party service to add",
              "required": true,
              "allowMultiple": false,
              "type": "ThirdPartyServiceView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/thirdPartyServices/{id}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete a Third-Party Service",
          "notes": "",
          "type": "void",
          "nickname": "deleteThirdPartyServiceCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Third-Party Service to delete",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Get a Third-Party Service",
          "notes": "",
          "type": "ThirdPartyServiceView",
          "nickname": "getThirdPartyServiceCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Third-Party Service to get",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update a Third-Party Service",
          "notes": "",
          "type": "ThirdPartyServiceView",
          "nickname": "updateThirdPartyServiceCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Third-Party Service to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "ThirdPartyService",
              "description": "Third-Party Service to update",
              "required": true,
              "allowMultiple": false,
              "type": "ThirdPartyServiceView",
              "paramType": "body"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "ThirdPartyServiceView": {
      "id": "ThirdPartyServiceView",
      "description": "A third-party service.",
      "required": [
        "name",
        "targets"
      ],
      "properties": {
        "availabilityProfileId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the availability profile associated with the third-party service."
        },
        "expectedHostname": {
          "type": "string",
          "description": "(sortable) The name of the host expected in the third-party service's certificate."
        },
        "hostValue": {
          "type": "string",
          "description": "(sortable) The Host header field value in the requests sent to a Third-Party Services. When set, PingAccess will use the hostValue as the Host header field value. Otherwise, the target value will be used."
        },
        "loadBalancingStrategyId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the load balancing strategy associated with the third-party service."
        },
        "maxConnections": {
          "type": "integer",
          "format": "int32",
          "description": "(sortable) The maximum number of HTTP persistent connections you want PingAccess to have open and maintain for the third-party service. -1 indicates unlimited connections."
        },
        "name": {
          "type": "string",
          "description": "(sortable) The name of the third-party service."
        },
        "secure": {
          "type": "boolean",
          "description": "(sortable) This field is true if the third-party service expects HTTPS connections."
        },
        "skipHostnameVerification": {
          "type": "boolean",
          "description": "(sortable) This field is true if the hostname verification of the third-party service's certificate should be skipped."
        },
        "targets": {
          "type": "array",
          "description": "The {hostname}:{port} pairs for the hosts that make up the third-party service.",
          "items": {
            "type": "string"
          }
        },
        "trustedCertificateGroupId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the trusted certificate group associated with the third-party service."
        },
        "useProxy": {
          "type": "boolean",
          "description": "(sortable) True if a proxy should be used for HTTP or HTTPS requests."
        }
      }
    },
    "ThirdPartyServicesView": {
      "id": "ThirdPartyServicesView",
      "description": "A collection of third-party service items.",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of third-party services.",
          "items": {
            "$ref": "ThirdPartyServiceView"
          }
        }
      }
    }
  }
}
