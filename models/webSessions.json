{
  "apiVersion": "6.0.0.3",
  "swaggerVersion": "1.2",
  "basePath": "https://localhost:9000/pa-admin-api/v3",
  "resourcePath": "/webSessions",
  "apis": [
    {
      "path": "/webSessions",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all WebSessions",
          "notes": "",
          "type": "WebSessionsView",
          "nickname": "getWebSessionsCommand",
          "parameters": [
            {
              "name": "page",
              "description": "Page number to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "numberPerPage",
              "description": "Number of Web Sessions per page",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "filter",
              "description": "Search for Web Sessions with name matching filter text",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "Get a Web Sessions by name",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "sortKey",
              "description": "A comma separated list of Web Session attributes (keys) to be used to sort the results",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "order",
              "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Create a WebSession",
          "notes": "",
          "type": "WebSessionView",
          "nickname": "addWebSessionCommand",
          "parameters": [
            {
              "name": "WebSessions",
              "description": "WebSession to add",
              "required": true,
              "allowMultiple": false,
              "type": "WebSessionView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/webSessions/{id}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete a WebSession",
          "notes": "",
          "type": "void",
          "nickname": "deleteWebSessionCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of WebSession to delete",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Get a WebSession",
          "notes": "",
          "type": "WebSessionView",
          "nickname": "getWebSessionCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of WebSession to get",
              "required": true,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update a WebSession",
          "notes": "",
          "type": "WebSessionView",
          "nickname": "updateWebSessionCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of WebSession to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "WebSessions",
              "description": "WebSession to update",
              "required": true,
              "allowMultiple": false,
              "type": "WebSessionView",
              "paramType": "body"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "OAuthClientCredentialsView": {
      "id": "OAuthClientCredentialsView",
      "description": "OAuth client credentials.",
      "required": [
        "clientId"
      ],
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Specify the client ID."
        },
        "clientSecret": {
          "$ref": "HiddenFieldView",
          "description": "Specify the client secret."
        }
      }
    },
    "WebSessionView": {
      "id": "WebSessionView",
      "description": "A web session.",
      "required": [
        "audience",
        "clientCredentials",
        "name"
      ],
      "properties": {
        "audience": {
          "type": "string",
          "description": "(sortable) Enter a unique identifier between 1 and 32 characters that defines who the PA Token is applicable to."
        },
        "cacheUserAttributes": {
          "type": "boolean",
          "description": "(sortable) Specify if PingAccess should cache user attribute information for use in policy decisions. When disabled, this data is encoded and stored in the session cookie."
        },
        "clientCredentials": {
          "$ref": "OAuthClientCredentialsView",
          "description": "Specify the client credentials."
        },
        "cookieDomain": {
          "type": "string",
          "description": "(sortable) The domain where the cookie is stored--for example, corp.yourcompany.com."
        },
        "cookieType": {
          "$ref": "WebSessionCookieType",
          "description": "(sortable) Specify an Encrypted JWT or a Signed JWT web session cookie. Default is Encrypted.",
          "enum": [
            "Encrypted",
            "Signed"
          ]
        },
        "enableRefreshUser": {
          "type": "boolean",
          "description": "(sortable) Specify if you want to have PingAccess periodically refresh user data from PingFederate for use in policy decisions."
        },
        "httpOnlyCookie": {
          "type": "boolean",
          "description": "(sortable) Enable the HttpOnly flag on cookies that contain the PA Token."
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "(sortable) The length of time you want the PingAccess Token to remain active when no activity is detected."
        },
        "name": {
          "type": "string",
          "description": "(sortable) The name of the web session."
        },
        "oidcLoginType": {
          "$ref": "OidcLoginType",
          "description": "(sortable) The web session token type.",
          "enum": [
            "Code",
            "POST",
            "x_post"
          ]
        },
        "pfsessionStateCacheInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "(sortable) Specify the number of seconds to cache PingFederate Session State information."
        },
        "pkceChallengeType": {
          "$ref": "PkceChallengeTypeView",
          "description": "(sortable) Specify the code_challenge_method to use for PKCE during the Code login flow. OFF signifies to not use PKCE.",
          "enum": [
            "SHA256",
            "OFF"
          ]
        },
        "refreshUserInfoClaimsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "(sortable) Specify the maximum number of seconds to cache user attribute information when the Refresh User is enabled."
        },
        "requestPreservationType": {
          "$ref": "RequestPreservationType",
          "description": "(sortable) Specify the types of request data to be preserved if the user is redirected to an authentication page when submitting information to a protected resource.",
          "enum": [
            "None",
            "POST",
            "All"
          ]
        },
        "requestProfile": {
          "type": "boolean",
          "description": "Specifies whether the default scopes ('profile', 'email', 'address', and 'phone') should be specified in the access request. (DEPRECATED - to be removed in a future release; please use 'scopes' instead)"
        },
        "sameSite": {
          "$ref": "SameSiteTypeView",
          "description": "(sortable) Specify the SameSite attribute to be used when setting the PingAccess Cookie. Default is None which allows the cookie to be used in a third-party context. If the cookie is not used in a third-party context then Lax is recommended.",
          "enum": [
            "Disabled",
            "Lax",
            "None"
          ]
        },
        "scopes": {
          "type": "array",
          "description": "The list of scopes to be specified in the access request. If not specified, the default scopes ('profile', 'email', 'address', and 'phone') will be used.",
          "items": {
            "type": "string"
          }
        },
        "secureCookie": {
          "type": "boolean",
          "description": "(sortable) Specify whether the PingAccess Cookie must be sent using only HTTPS connections."
        },
        "sendRequestedUrlToProvider": {
          "type": "boolean",
          "description": "(sortable) Specify if you want to send the requested URL as part of the authentication request to the OpenID Connect Provider."
        },
        "sessionTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "(sortable) The length of time you want the PA Token to remain active. Once the PA Token expires, an authenticated user must re-authenticate."
        },
        "validateSessionIsAlive": {
          "type": "boolean",
          "description": "(sortable) Specify if PingAccess should validate sessions with the configured PingFederate instance during request processing."
        },
        "webStorageType": {
          "$ref": "WebStorageType",
          "description": "(sortable) Specify the type of web storage to use for request preservation data.  Default is SessionStorage.",
          "enum": [
            "SessionStorage",
            "LocalStorage"
          ]
        }
      }
    },
    "HiddenFieldView": {
      "id": "HiddenFieldView",
      "description": "A hidden field.",
      "properties": {
        "encryptedValue": {
          "type": "string",
          "description": "The encrypted value of the field, as originally returned by the API."
        },
        "value": {
          "type": "string",
          "description": "The value of the field. This field takes precedence over the encryptedValue field, if both are specified."
        }
      }
    },
    "WebSessionsView": {
      "id": "WebSessionsView",
      "description": "A collection of web sessions.",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of web sessions.",
          "items": {
            "$ref": "WebSessionView"
          }
        }
      }
    }
  }
}
