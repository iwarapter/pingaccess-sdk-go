{
  "apiVersion": "5.2.2.0",
  "swaggerVersion": "1.2",
  "basePath": "https://localhost:9000/pa-admin-api/v3",
  "resourcePath": "/rejectionHandlers",
  "apis": [
    {
      "path": "/rejectionHandlers",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all Rejection Handlers",
          "notes": "",
          "type": "RejectionHandlersView",
          "nickname": "getRejectionHandlersCommand",
          "parameters": [
            {
              "name": "page",
              "description": "Page number to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "numberPerPage",
              "description": "Number of Rejection Handlers per page",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "filter",
              "description": "Search for Rejection Handlers with name matching filter text",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "Get a Rejection Handler by name (case-sensitive)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "sortKey",
              "description": "A comma separated list of Rejection Handler attributes (keys) to be used to sort the results",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "order",
              "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Create a Rejection Handler",
          "notes": "",
          "type": "RejectionHandlerView",
          "nickname": "addRejectionHandlerCommand",
          "parameters": [
            {
              "name": "RejectionHandler",
              "description": "Rejection Handler to add",
              "required": true,
              "allowMultiple": false,
              "type": "RejectionHandlerView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/rejectionHandlers/descriptors",
      "operations": [
        {
          "method": "GET",
          "summary": "Get descriptors for all supported Rejection Handler types",
          "notes": "",
          "type": "DescriptorsView",
          "nickname": "getRejectionHandlerDescriptorsCommand",
          "parameters": []
        }
      ]
    },
    {
      "path": "/rejectionHandlers/descriptors/{rejectionHandlerType}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get descriptor for a Rejection Handler type",
          "notes": "",
          "type": "DescriptorView",
          "nickname": "getRejecitonHandlerDescriptorCommand",
          "parameters": [
            {
              "name": "rejectionHandlerType",
              "description": "Rejection Handler descriptor to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/rejectionHandlers/{id}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete a Rejection Handler",
          "notes": "",
          "type": "void",
          "nickname": "deleteRejectionHandlerCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Rejection Handler to delete",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Get a Rejection Handler",
          "notes": "",
          "type": "RejectionHandlerView",
          "nickname": "getRejectionHandlerCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Rejection Handler to get",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update a Rejection Handler",
          "notes": "",
          "type": "RejectionHandlerView",
          "nickname": "updateRejectionHandlerCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Rejection Handler to update",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "RejectionHandler",
              "description": "Rejection Handler to update",
              "required": true,
              "allowMultiple": false,
              "type": "RejectionHandlerView",
              "paramType": "body"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "ConfigurationParentField": {
      "id": "ConfigurationParentField",
      "description": "Configuration of the parent field.",
      "required": [
        "dependentFieldOptions",
        "fieldName"
      ],
      "properties": {
        "dependentFieldOptions": {
          "type": "array",
          "description": "The dependent field options attributes.",
          "items": {
            "$ref": "ConfigurationDependentFieldOption"
          }
        },
        "fieldName": {
          "type": "string",
          "description": "The configuration parent field name."
        }
      }
    },
    "RejectionHandlersView": {
      "id": "RejectionHandlersView",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of rejection handlers.",
          "items": {
            "$ref": "RejectionHandlerView"
          }
        }
      }
    },
    "RejectionHandlerView": {
      "id": "RejectionHandlerView",
      "required": [
        "className",
        "configuration",
        "name"
      ],
      "properties": {
        "className": {
          "type": "string",
          "description": "(sortable) The rejection handler's class name."
        },
        "configuration": {
          "$ref": "Map[string,java.lang.Object]",
          "description": "The rejection handler's configuration data."
        },
        "name": {
          "type": "string",
          "description": "(sortable) The rejection handler's name."
        }
      }
    },
    "ConfigurationField": {
      "id": "ConfigurationField",
      "description": "Details for configuration in the administrator console.",
      "required": [
        "advanced",
        "buttonGroup",
        "default",
        "deselectable",
        "fields",
        "help",
        "label",
        "name",
        "options",
        "parentField",
        "required",
        "type"
      ],
      "properties": {
        "advanced": {
          "type": "boolean",
          "description": "Indicates that the configuration field is an advanced field or not."
        },
        "buttonGroup": {
          "type": "string",
          "description": "The name of group radio buttons that cooperate in a single selection."
        },
        "default": {
          "type": "string",
          "description": "The default value of the configuration field."
        },
        "deselectable": {
          "type": "boolean",
          "description": "Indicates that a radio button is able to be deselected."
        },
        "fields": {
          "type": "array",
          "description": "The list of configuration fields that the current configuration field is the parent of.",
          "items": {
            "$ref": "ConfigurationField"
          }
        },
        "help": {
          "$ref": "Help",
          "description": "The help attributes of the configuration field."
        },
        "label": {
          "type": "string",
          "description": "The label of the configuration field."
        },
        "name": {
          "type": "string",
          "description": "The name of the configuration field."
        },
        "options": {
          "$ref": "java.util.Collection<com.pingidentity.pa.sdk.ui.ConfigurationOption>",
          "description": "The available options for the select based configuration fields."
        },
        "parentField": {
          "$ref": "ConfigurationParentField",
          "description": "The parent field attributes."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates that the configuration field value is required or not."
        },
        "type": {
          "$ref": "ConfigurationType",
          "description": "The type of the configuration field.",
          "enum": [
            "TEXT",
            "TEXTAREA",
            "TIME",
            "SELECT",
            "GROOVY",
            "CONCEALED",
            "LIST",
            "TABLE",
            "CHECKBOX",
            "AUTOCOMPLETEOPEN",
            "AUTOCOMPLETECLOSED",
            "COMPOSITE",
            "RADIO_BUTTON"
          ]
        }
      }
    },
    "DescriptorsView": {
      "id": "DescriptorsView",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "The actual list of descriptors.",
          "items": {
            "$ref": "DescriptorView"
          }
        }
      }
    },
    "ConfigurationOption": {
      "id": "ConfigurationOption",
      "description": "The configuration option attributes.",
      "required": [
        "category",
        "label",
        "value"
      ],
      "properties": {
        "category": {
          "$ref": "java.util.Optional<java.lang.String>",
          "description": "The configuration option category."
        },
        "label": {
          "type": "string",
          "description": "The configuration option label."
        },
        "value": {
          "type": "string",
          "description": "The configuration option value."
        }
      }
    },
    "ConfigurationDependentFieldOption": {
      "id": "ConfigurationDependentFieldOption",
      "description": "Configuration of the dependent field option.",
      "required": [
        "options",
        "value"
      ],
      "properties": {
        "options": {
          "type": "array",
          "description": "The dependent field options.",
          "items": {
            "$ref": "ConfigurationOption"
          }
        },
        "value": {
          "type": "string",
          "description": "The dependent field option value."
        }
      }
    },
    "Help": {
      "id": "Help",
      "description": "Configuration of the help context of a configuration field.",
      "required": [
        "content",
        "title",
        "url"
      ],
      "properties": {
        "content": {
          "type": "string",
          "description": "The help content of the configuration field."
        },
        "title": {
          "type": "string",
          "description": "The help title of the configuration field."
        },
        "url": {
          "type": "string",
          "description": "The help URL for the configuration field."
        }
      }
    },
    "DescriptorView": {
      "id": "DescriptorView",
      "required": [
        "className",
        "configurationFields",
        "label",
        "type"
      ],
      "properties": {
        "className": {
          "type": "string",
          "description": "The name of the implementation class."
        },
        "configurationFields": {
          "type": "array",
          "description": "The list of configuration fields for the class.",
          "items": {
            "$ref": "ConfigurationField"
          }
        },
        "label": {
          "type": "string",
          "description": "The label for the entity."
        },
        "type": {
          "type": "string",
          "description": "The type for the entity."
        }
      }
    }
  }
}
