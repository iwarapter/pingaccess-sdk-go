{
  "apiVersion": "6.0.0.3",
  "swaggerVersion": "1.2",
  "basePath": "https://localhost:9000/pa-admin-api/v3",
  "resourcePath": "/engines",
  "apis": [
    {
      "path": "/engines",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all Engines",
          "notes": "",
          "type": "EnginesView",
          "nickname": "getEnginesCommand",
          "parameters": [
            {
              "name": "page",
              "description": "Page number to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "numberPerPage",
              "description": "Number of Engines per page",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "filter",
              "description": "Search for Engines with name matching filter text",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "name",
              "description": "Get a Engines by name",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "sortKey",
              "description": "A comma separated list of Engine attributes (keys) to be used to sort the results",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "order",
              "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            }
          ]
        },
        {
          "method": "POST",
          "summary": "Add an Engine",
          "notes": "",
          "type": "EngineView",
          "nickname": "addEngineCommand",
          "parameters": [
            {
              "name": "Engine",
              "description": "Engine to create",
              "required": true,
              "allowMultiple": false,
              "type": "EngineView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/engines/certificates",
      "operations": [
        {
          "method": "GET",
          "summary": "Get all Engine Certificates",
          "notes": "",
          "type": "EngineCertificateView",
          "nickname": "getEngineCertificatesCommand",
          "parameters": [
            {
              "name": "page",
              "description": "Page number to retrieve",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "numberPerPage",
              "description": "Number of Engine Certificates per page",
              "required": false,
              "allowMultiple": false,
              "type": "integer",
              "format": "int32",
              "paramType": "query"
            },
            {
              "name": "filter",
              "description": "Search for Engine Certificates with alias matching filter text",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "alias",
              "description": "Get Engine Certificates by alias",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "sortKey",
              "description": "A comma separated list of Engine Certificate attributes (keys) to be used to sort the results",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            },
            {
              "name": "order",
              "description": "Order of the sorted results (ASC for ascending, DESC for descending)",
              "required": false,
              "allowMultiple": false,
              "type": "string",
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/engines/certificates/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Get an Engine Certificate",
          "notes": "",
          "type": "EngineCertificateView",
          "nickname": "getEngineCertificateCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of Certificate to get",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    },
    {
      "path": "/engines/status",
      "operations": [
        {
          "method": "GET",
          "summary": "Get health status of all Engines",
          "notes": "",
          "type": "EngineHealthStatusView",
          "nickname": "getEngineStatusCommand",
          "parameters": []
        }
      ]
    },
    {
      "path": "/engines/{id}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Delete an Engine",
          "notes": "",
          "type": "void",
          "nickname": "deleteEngineCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of the engine to delete",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "GET",
          "summary": "Get an Engine",
          "notes": "",
          "type": "EngineView",
          "nickname": "getEngineCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of engine to get",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        },
        {
          "method": "PUT",
          "summary": "Update an Engine",
          "notes": "",
          "type": "EngineView",
          "nickname": "updateEngineCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of engine to get",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "Engine",
              "description": "Engine to update",
              "required": true,
              "allowMultiple": false,
              "type": "EngineView",
              "paramType": "body"
            }
          ]
        }
      ]
    },
    {
      "path": "/engines/{id}/config",
      "operations": [
        {
          "method": "POST",
          "summary": "Get configuration file for an Engine",
          "notes": "",
          "type": "void",
          "nickname": "getEngineConfigFileCommand",
          "parameters": [
            {
              "name": "id",
              "description": "ID of engine to get configuration for",
              "required": true,
              "allowMultiple": false,
              "type": "string",
              "paramType": "path"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "PublicKeyView": {
      "id": "PublicKeyView",
      "description": "A public key.",
      "required": [
        "jwk"
      ],
      "properties": {
        "created": {
          "$ref": "Instant",
          "description": "A timestamp when the key was created."
        },
        "jwk": {
          "$ref": "JsonNode",
          "description": "The JSON of the public key."
        }
      }
    },
    "EngineInfo": {
      "id": "EngineInfo",
      "required": [
        "description",
        "lastUpdated",
        "name",
        "pollingDelay"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "pollingDelay": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GeneralName": {
      "id": "GeneralName",
      "description": "A subject alternative name.",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "$ref": "GeneralNameEnum",
          "description": "The type of the subject alternative name.",
          "enum": [
            "otherName",
            "rfc822Name",
            "dNSName",
            "x400Address",
            "directoryName",
            "ediPartyName",
            "uniformResourceIdentifier",
            "iPAddress",
            "registeredID"
          ]
        },
        "value": {
          "type": "string",
          "description": "The value of the subject alternative name."
        }
      }
    },
    "EngineCertificateView": {
      "id": "EngineCertificateView",
      "description": "An engine certificate.",
      "required": [
        "alias",
        "chainCertificate",
        "expires",
        "issuerDn",
        "keyPair",
        "md5sum",
        "serialNumber",
        "sha1sum",
        "signatureAlgorithm",
        "status",
        "subjectDn",
        "trustedCertificate",
        "validFrom"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The id for the engine certificate."
        },
        "alias": {
          "type": "string",
          "description": "(sortable) The alias for the engine certificate."
        },
        "chainCertificate": {
          "type": "boolean",
          "description": "A flag indicating whether the engine certificate is a chain certificate."
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "(sortable) The date at which the engine certificate expires as the number of milliseconds since January 1, 1970, 00:00:00 GMT."
        },
        "issuerDn": {
          "type": "string",
          "description": "(sortable) The issuer DN for the engine certificate."
        },
        "keyPair": {
          "type": "boolean",
          "description": "A flag indicating whether the engine certificate is a key pair."
        },
        "md5sum": {
          "type": "string",
          "description": "The MD5 checksum of the engine certificate."
        },
        "serialNumber": {
          "type": "string",
          "description": "(sortable) The Serial Number for the engine certificate."
        },
        "sha1sum": {
          "type": "string",
          "description": "The SHA1 checksum of the engine certificate."
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "(sortable) The Signature Algorithm used by the engine certificate."
        },
        "status": {
          "$ref": "CertStatus",
          "description": "A high-level status for the engine certificate.",
          "enum": [
            "Valid",
            "Expired",
            "Not yet valid",
            "Revoked",
            "Undetermined revocation status",
            "No path to trust anchor",
            "Invalid"
          ]
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "A collection of subject alternative names for the engine certificate.",
          "items": {
            "$ref": "GeneralName"
          }
        },
        "subjectCn": {
          "type": "string",
          "description": "(sortable) The common name (CN) identifying the certificate."
        },
        "subjectDn": {
          "type": "string",
          "description": "(sortable) The Subject DN for the engine certificate."
        },
        "trustedCertificate": {
          "type": "boolean",
          "description": "A flag indicating whether the engine certificate is a trusted certificate."
        },
        "validFrom": {
          "type": "string",
          "format": "date-time",
          "description": "(sortable) The date at which the engine certificate is valid from as the number of milliseconds since January 1, 1970, 00:00:00 GMT."
        }
      }
    },
    "EnginesView": {
      "id": "EnginesView",
      "description": "A collection of engines.",
      "required": [
        "items"
      ],
      "properties": {
        "items": {
          "type": "array",
          "description": "An array of engines.",
          "items": {
            "$ref": "EngineView"
          }
        }
      }
    },
    "EngineView": {
      "id": "EngineView",
      "description": "An engine.",
      "required": [
        "name"
      ],
      "properties": {
        "certificateHash": {
          "$ref": "Hash",
          "description": "The certificate hash."
        },
        "configReplicationEnabled": {
          "type": "boolean",
          "description": "(sortable) Set to true when configuration replication for this engine is enabled. False when configuration replication is suspended."
        },
        "description": {
          "type": "string",
          "description": "(sortable) The description of the engine."
        },
        "httpProxyId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the proxy to use for HTTP requests or zero if none."
        },
        "httpsProxyId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the proxy to use for HTTPS requests or zero if none."
        },
        "keys": {
          "type": "array",
          "description": "An array of public keys associated with the engine.",
          "items": {
            "$ref": "PublicKeyView"
          }
        },
        "name": {
          "type": "string",
          "description": "(sortable) The name of the engine."
        },
        "selectedCertificateId": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the certificate the engine will use to contact PingAccess via SSL/TLS."
        }
      }
    },
    "EngineHealthStatusView": {
      "id": "EngineHealthStatusView",
      "required": [
        "currentServerTime",
        "enginesStatus"
      ],
      "properties": {
        "currentServerTime": {
          "type": "integer",
          "format": "int64"
        },
        "enginesStatus": {
          "$ref": "Map[string,EngineInfo]"
        }
      }
    },
    "Hash": {
      "id": "Hash",
      "description": "A hash.",
      "required": [
        "algorithm",
        "hexValue"
      ],
      "properties": {
        "algorithm": {
          "$ref": "HashAlgorithm",
          "description": "The hash algorithm.",
          "enum": [
            "MD5",
            "SHA1",
            "SHA256",
            "SHA384",
            "SHA512"
          ]
        },
        "hexValue": {
          "type": "string",
          "description": "The hex-encoded value of the hash."
        }
      }
    }
  }
}
